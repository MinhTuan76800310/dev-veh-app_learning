syntax = "proto3";

package routeguide;

// Interface exported by the server.
service RouteGuide {
  // A simple RPC.
  // Obtains the feature at a given position.
  // A feature with an empty name is returned if there's no feature at the given position.
  rpc GetFeature(Point) returns (Feature);
  
  // A server-to-client streaming RPC.
  // Obtains the Features available within the given Rectangle.
  rpc ListFeatures(Rectangle) returns (stream Feature);
  
  // A client-to-server streaming RPC.
  // Accepts a stream of Points on a route, returning a RouteSummary.
  rpc RecordRoute(stream Point) returns (RouteSummary);
  
  // A bidirectional streaming RPC.
  // Accepts and returns a stream of RouteNotes.
  rpc RouteChat(stream RouteNote) returns (stream RouteNote);
}

// Points are represented as latitude-longitude pairs in the E7 representation
// (degrees multiplied by 10**7 and rounded to the nearest integer).
message Point {
  int32 latitude = 1;
  int32 longitude = 2;
}

// A latitude-longitude rectangle, represented as two diagonally opposite points.
message Rectangle {
  Point lo = 1;
  Point hi = 2;
}

// A feature names something at a given point.
message Feature {
  string name = 1;
  Point location = 2;
}

// A message sent while at a given point.
message RouteNote {
  Point location = 1;
  string message = 2;
}

// Summary of a route traversal.
message RouteSummary {
  int32 point_count = 1;
  int32 feature_count = 2;
  int32 distance = 3;
  int32 elapsed_time = 4;
}